<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>